From 785ef14fa11aef8e5725d2a8f310443bab09dfc2 Mon Sep 17 00:00:00 2001
From: Roman Stratiienko <r.stratiienko@gmail.com>
Date: Sun, 17 Sep 2023 18:05:48 +0300
Subject: [PATCH 21/21] WIP: RPI4: Hardware codecs

Change-Id: Icd7f00a7e8118b25273f5c416558f066ab3fd859
Signed-off-by: Roman Stratiienko <r.stratiienko@gmail.com>
---
 gbm_mesa_driver/gbm_mesa_internals.cpp | 26 +++++++++++++++++++++-----
 1 file changed, 21 insertions(+), 5 deletions(-)

diff --git a/gbm_mesa_driver/gbm_mesa_internals.cpp b/gbm_mesa_driver/gbm_mesa_internals.cpp
index f9adecd..61739f2 100644
--- a/gbm_mesa_driver/gbm_mesa_internals.cpp
+++ b/gbm_mesa_driver/gbm_mesa_internals.cpp
@@ -111,6 +111,7 @@ int gbm_mesa_driver_init(struct driver *drv)
 			       BO_USE_HW_VIDEO_ENCODER | BO_USE_HW_VIDEO_DECODER |
 				   BO_USE_CAMERA_READ | BO_USE_CAMERA_WRITE);
 	drv_modify_combination(drv, DRM_FORMAT_NV21, &linear_metadata, BO_USE_HW_VIDEO_ENCODER);
+	drv_modify_combination(drv, DRM_FORMAT_XBGR8888, &linear_metadata, BO_USE_HW_VIDEO_ENCODER);
 
 	/*
 	 * R8 format is used for Android's HAL_PIXEL_FORMAT_BLOB and is used for JPEG snapshots
@@ -347,7 +348,7 @@ int gbm_mesa_bo_create(struct bo *bo, uint32_t width, uint32_t height, uint32_t
 {
 	/* For some ARM SOCs, if no more free CMA available, buffer can be allocated in VRAM but HWC
 	 * won't be able to display it directly, using GPU for compositing */
-	bool scanout_strong = false;
+	bool scanout_strong = true;
 	bool bo_layout_ready = false;
 	uint32_t size_align = 1;
 	int err = 0;
@@ -365,8 +366,8 @@ int gbm_mesa_bo_create(struct bo *bo, uint32_t width, uint32_t height, uint32_t
 		.width = width,
 		.height = height,
 		.drm_format = wr->get_gbm_format(format) ? format : 0,
-		.use_scanout = (use_flags & BO_USE_SCANOUT) != 0,
-		.force_linear = (use_flags & BO_USE_SW_MASK) != 0,
+		.use_scanout = true,
+		.force_linear = true,
 		.needs_map_stride = (use_flags & BO_USE_SW_MASK) != 0,
 	};
 
@@ -380,6 +381,16 @@ int gbm_mesa_bo_create(struct bo *bo, uint32_t width, uint32_t height, uint32_t
 		size_align = 4096;
 	}
 
+	/* RPI4 hwcodecs */
+	if (use_flags & (BO_USE_HW_VIDEO_DECODER | BO_USE_HW_VIDEO_ENCODER)) {
+		scanout_strong = true;
+		alloc_args.use_scanout = true;
+		alloc_args.width = ALIGN(alloc_args.width, 32);
+		if (alloc_args.height > 1)
+			alloc_args.height = ALIGN(alloc_args.height, 16);
+		size_align = 4096;
+	}
+
 	if (alloc_args.drm_format == 0) {
 		/* Always use linear for spoofed format allocations. */
 		drv_bo_from_format(bo, alloc_args.width, 1, alloc_args.height, format);
@@ -420,8 +431,13 @@ int gbm_mesa_bo_create(struct bo *bo, uint32_t width, uint32_t height, uint32_t
 	if (!bo_layout_ready)
 		drv_bo_from_format(bo, alloc_args.out_stride, 1, alloc_args.height, format);
 
-	drv_logv("Allocated: %dx%d, stride: %d, map_stride: %d", width, height,
-		 alloc_args.out_stride, alloc_args.out_map_stride);
+	char use_str[128];
+	use_str[0] = 0;
+
+	drv_use_flags_to_string(use_flags, use_str, sizeof(use_str));
+
+	drv_logi("Allocate buffer, %dx%d, stride %d, total_size: %llu, use: %s", width, height,
+		 alloc_args.out_stride, bo->meta.total_size, use_str);
 
 	auto priv = new GbmMesaBoPriv();
 	bo->inode = drv_get_inode(alloc_args.out_fd);
-- 
2.39.2

